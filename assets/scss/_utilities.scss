@use 'sass:math';
@use 'variables' as *;

.flow > * + * {
  margin-top: var(--flow-space, 1em);
}

.region {
  padding-block: var(--region-space, var(--space-l-2xl));
}

.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

.not\:focus\:visually-hidden {
  &:not(:focus) {
    border: 0;
    clip: rect(0 0 0 0);
    height: auto;
    margin: 0;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap;
  }
}

.flex {
  display: flex;

  &.flex-wrap {
    flex-wrap: wrap;
  }

  &.space-between {
    justify-content: space-between;
  }

  &.items-center {
    align-items: center;
  }

  &-center {
    display: flex;
    // justify-content: center;
    align-items: center;
    // gap: var(--space-3xs);
  }

  &-between {
    display: flex;
    justify-content: space-between;
    align-items: center;
    // gap: var(--space-3xs);
  }
}

.container {
  padding: var(--space-xl) var(--space-s);
  max-width: var(--fluid-max-width);
  margin-inline: auto;
  // border: 1px solid red;
}
// .grid {
//   display: grid;
//   grid-template-columns: 1fr;
//   gap: var(--gutter, var(--space-s-l));

//   &[data-layout='3'] {
//     grid-template-columns: repeat(3, 1fr);
//   }
// }

// .place-items-center {
//   place-items: center;
// }

.h-screen {
  min-height: 100vh;
}

.h-6 {
  height: 1.5em;
}

.w-6 {
  width: 1.5em;
}

.h-4 {
  height: 1em;
}

.w-4 {
  width: 1em;
}

.hidden {
  visibility: hidden;
  opacity: 0;
  // display: none;
}

// .wr-6 {
//   width: 1.5rem;
// }

// .hr-6 {
//   height: 1.5rem;
// }

// .container {
//   max-width: 70rem;
//   // padding: 0 1.33rem;
//   margin-inline: auto;
//   // margin-right: auto;
//   // position: relative;
// }

// .full-bleed {
//   width: 100vw;
//   margin-left: calc(50% - 50vw);

//   & > * {
//     max-width: var(--fluid-max-width);
//     margin-inline: auto;
//   }

//   p {
//     max-width: 70ch;
//   }
// }

.b-red {
  border: 2px solid red;
}

.b-pink {
  border: 2px solid pink;
}

.b-green {
  border: 2px solid green;
}

.b-blue {
  border: 2px solid blue;
}

.sticky {
  position: sticky;
  top: 0;
  // left: 0;
  // width: 100%;
}

// .btn {
//   border: 1px solid white;
//   background: transparent;
//   color: currentColor;
//   display: inline-flex;
//   align-items: center;
//   font-size: var(--font-size--1);
//   padding: var(--space-2xs) var(--space-s);
//   border-radius: var(--border-radius);
//   gap: var(--space-3xs);
//   text-transform: uppercase;
//   letter-spacing: 0.1rem;
//   text-decoration: none;
//   cursor: pointer;
//   border: 1px solid var(--color-primary);

//   // &.primary {
//   //   &:hover {
//   //   }
//   // }

//   &-secondary {
//     border: 1px solid var(--color-accent-60);
//   }

//   &-header {
//     border: 1px solid var(--color-primary-90);

//     svg {
//       fill: currentColor;
//     }

//     &:hover {
//       background-color: var(--color-primary-90);
//       color: var(--color-primary-10);
//       // color: transparent;
//     }
//   }

//   svg {
//     // height: 1em;
//     // width: 1em;
//     // border: 1px solid green;
//   }
// }

.center {
  display: grid;
  place-content: center;
  // margin-inline: 0 auto;
  // text-align: center;
}

.grid {
  /* first breakpoint*/
  --w1: 1200px;
  --n: 3;
  /* second breakpoint*/
  --w2: 800px;
  --m: 3;
  /* third breakpoint*/
  --w3: 400px;
  --p: 1;

  display: grid;
  grid-template-columns: repeat(
    auto-fill,
    minmax(
      clamp(
        clamp(
          clamp(100%/ (var(--n) + 1) + 0.1%, (var(--w1) - 100%) * 1000, 100%/ (var(--m) + 1) + 0.1%),
          (var(--w2) - 100%) * 1000,
          100%/ (var(--p) + 1) + 0.1%
        ),
        (var(--w3) - 100%) * 1000,
        100%
      ),
      1fr
    )
  );
  gap: var(--space-l);
}

@each $hue, $shades in $colors {
  @each $shade, $hex in $shades {
    // @debug --color-#{$color}-#{$shade};
    // --color-#{$color}-#{$shade}: #{$hex};
    // @debug nth($shades, 2);
    // @if (fetch-color(primary, 40)) {
    //   --color-#{$color}: #{fetch-color(nth($shades, 1), nth($shades, 2))}; // #355ca8;

    //

    .text-#{$hue}-#{$shade} {
      color: #{$hex};
    }

    .bg-#{$hue}-#{$shade} {
      background-color: #{$hex};
    }

    .fill-#{$hue}-#{$shade} {
      fill: #{$hex};
    }
  }
}

.pb-l {
  padding-block: var(--space-l);
}

.pb-xl {
  padding-block: var(--space-xl);
}
